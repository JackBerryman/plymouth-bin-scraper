name: Refresh bin schedule & WhatsApp notify

on:
  # Manual run with inputs
  workflow_dispatch:
    inputs:
      postcode:
        description: "Postcode (e.g., PL6 5HX)"
        required: true
        default: "PL6 5HX"
      address_hint:
        description: "Address hint (e.g., 72 Windermere)"
        required: true
        default: "72 Windermere"

  # ðŸ•’ Auto-refresh every night at 02:15 UTC (03:15 UK in winter)
  schedule:
    - cron: "15 2 * * *"
    # ðŸ•” Daily WhatsApp reminder at 17:00 UTC (18:00 UK in summer)
    - cron: "0 17 * * *"

jobs:
  refresh:
    # Run for manual runs and for the 02:15 cron only
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '15 2 * * *'
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install --with-deps chromium

      - name: Run scraper (headless)
        env:
          FORM_URL: https://plymouth-self.achieveservice.com/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-31283f9a-3ae7-4225-af71-bf3884e0ac1b/AF-Stagedba4a7d5-e916-46b6-abdb-643d38bec875/definition.json&redirectlink=%2Fen&cancelRedirectLink=%2Fen&consentMessage=yes
          HEADLESS: "true"
          DEBUG_PAUSE: "false"
          CACHE_TTL_HOURS: "0"
          OUTPUT_DIR: public

          # For manual runs (from "Run workflow" button)
          POSTCODE_INPUT: ${{ github.event.inputs.postcode }}
          ADDRESS_HINT_INPUT: ${{ github.event.inputs.address_hint }}

          # For scheduled runs (no manual inputs)
          POSTCODE_DEFAULT: "PL6 5 HX"
          ADDRESS_HINT_DEFAULT: "72 Windermere"
        run: |
          # If inputs are missing (schedule), fall back to defaults
          export POSTCODE="${POSTCODE_INPUT:-$POSTCODE_DEFAULT}"
          export ADDRESS_HINT="${ADDRESS_HINT_INPUT:-$ADDRESS_HINT_DEFAULT}"

          python scraper.py

      - name: Upload artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: outputs
          path: public/*

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    if: needs.refresh.result == 'success'
    needs: refresh
    permissions:
      pages: write
      id-token: write
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  notify:
    # Run for the 17:00 cron and also allowed on manual runs
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 17 * * *'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Send WhatsApp if tomorrow is a collection day
        env:
          # Use your live GitHub Pages JSON (change to latest.json if you add that alias)
          BIN_JSON_URL: https://jackberryman.github.io/plymouth-bin-scraper/PL6_5HX_72_Windermere.json

          # Twilio secrets â€” add these in Repo â†’ Settings â†’ Secrets and variables â†’ Actions
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_WHATSAPP_FROM: ${{ secrets.TWILIO_WHATSAPP_FROM }}   # e.g. whatsapp:+14155238886
          TWILIO_WHATSAPP_TO: ${{ secrets.TWILIO_WHATSAPP_TO }}       # e.g. whatsapp:+447969513470
        run: python notify.py
