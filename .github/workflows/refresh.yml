name: Refresh bin schedule & WhatsApp notify

on:
  workflow_dispatch:
    inputs:
      postcode:
        description: "Postcode (e.g., PL6 5HX)"
        required: true
        default: "PL6 5HX"
      address_hint:
        description: "Address hint (e.g., 72 Windermere)"
        required: true
        default: "72 Windermere"

  # Daily run at 17:15 UTC
  schedule:
    - cron: "15 17 * * *"

# Avoid overlapping runs
concurrency:
  group: pages-build-and-notify
  cancel-in-progress: true

jobs:
  refresh:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python -m playwright install --with-deps chromium

      - name: Run scraper (headless)
        env:
          FORM_URL: https://plymouth-self.achieveservice.com/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-31283f9a-3ae7-4225-af71-bf3884e0ac1b/AF-Stagedba4a7d5-e916-46b6-abdb-643d38bec875/definition.json&redirectlink=%2Fen&cancelRedirectLink=%2Fen&consentMessage=yes
          HEADLESS: "true"
          DEBUG_PAUSE: "false"
          OUTPUT_DIR: public
          # manual-run inputs
          POSTCODE_INPUT: ${{ github.event.inputs.postcode }}
          ADDRESS_HINT_INPUT: ${{ github.event.inputs.address_hint }}
          # scheduled defaults
          POSTCODE_DEFAULT: "PL6 5HX"
          ADDRESS_HINT_DEFAULT: "72 Windermere"
        run: |
          export POSTCODE="${POSTCODE_INPUT:-$POSTCODE_DEFAULT}"
          export ADDRESS_HINT="${ADDRESS_HINT_INPUT:-$ADDRESS_HINT_DEFAULT}"
          python scraper.py

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: public

  deploy:
    needs: refresh
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    steps:
      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4

  notify:
    needs: deploy
    if: ${{ always() && (needs.refresh.result == 'success') && (needs.deploy.result == 'success') }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install notify deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for GitHub Pages to serve the new JSON (retry)
        env:
          JSON_URL: https://jackberryman.github.io/plymouth-bin-scraper/PL6_5HX_72_Windermere.json
        run: |
          echo "Probing $JSON_URL until it returns 200..."
          for i in $(seq 1 20); do
            code=$(curl -s -o /dev/null -w "%{http_code}" "$JSON_URL")
            if [ "$code" = "200" ]; then
              echo "OK (200) after $i attempt(s)."
              exit 0
            fi
            echo "Attempt $i: got $code, retrying in 10sâ€¦"
            sleep 10
          done
          echo "JSON never appeared in time."
          exit 1

      - name: Send WhatsApp if tomorrow is a collection day
        env:
          BIN_JSON_URL: https://jackberryman.github.io/plymouth-bin-scraper/PL6_5HX_72_Windermere.json
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN:  ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_WHATSAPP_FROM: ${{ secrets.TWILIO_WHATSAPP_FROM }}
          TWILIO_WHATSAPP_TO:  ${{ secrets.TWILIO_WHATSAPP_TO }}
        run: python notify.py
